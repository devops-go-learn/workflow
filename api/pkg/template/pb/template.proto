syntax = "proto3";

package workflow.template;
option go_package = "github.com/infraboard/workflow/api/pkg/template";

import "api/pkg/pipeline/pb/pipeline.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";
import "github.com/infraboard/mcube/pb/resource/base.proto";
import "github.com/infraboard/mcube/cmd/protoc-gen-go-ext/extension/tag/tag.proto";

service Service {
	rpc CreateTemplate(CreateTemplateRequest) returns(Template);
	rpc QueryTemplate(QueryTemplateRequest) returns(TemplateSet);
	rpc DescribeTemplate(DescribeTemplateRequest) returns(Template);
	rpc UpdateAction(UpdateTemplateRequest) returns(Template);
	rpc DeleteTemplate(DeleteTemplateRequest) returns(Template);
}

// Template Pipeline参数模版
message Template {
        // 唯一ID
        string id = 1[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"_id" json:"id"'}
        ];
        // 所属域
        string domain = 2[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"domain" json:"domain"'}
        ];
        // 所属空间
        string namespace = 3[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"namespace" json:"namespace"'}
        ];
        // 创建时间
        int64 create_at = 4[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"create_at" json:"create_at"'}
        ];
        // 创建人
        string create_by = 5[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"create_by" json:"create_by"'}
        ];
        // 创建时间
        int64 update_at = 6[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"update_at" json:"update_at"'}
        ];
        // 创建人
        string update_by = 7[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"update_by" json:"update_by"'}
        ];
        // 用于创建pipeline的请求参数
        repeated workflow.pipeline.CreatePipelineRequest pipeline = 8[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"pipeline" json:"pipeline"'}
        ];
        // 可见模式
        mcube.resource.VisiableMode visiable_mode = 9[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"visiable_mode" json:"visiable_mode"'}
        ];
        // 模版的名字
        string name = 10[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"name" json:"name"'}
        ];
        // 标签
        map<string, string> tags = 11[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"tags" json:"tags"'}
        ];
        // 描述
        string description = 12[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"description" json:"description"'}
        ];
}


// TemplateSet todo
message TemplateSet {
        int64 total = 1[
            (google.protobuf.field_tag) = {struct_tag: 'json:"total"'}
            ];
        repeated Template items = 2[
            (google.protobuf.field_tag) = {struct_tag: 'json:"items"'}
            ];
}

// CreateTemplateRequest todo
message CreateTemplateRequest {
        // 所属域
        string domain = 1[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"domain" json:"domain" validate:"required"'}
        ];
        // 所属空间
        string namespace = 2[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"namespace" json:"namespace" validate:"required"'}
        ];
        // 创建人
        string create_by = 3[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"create_by" json:"create_by" validate:"required"'}
        ];
        // 用于创建pipeline的请求参数
        repeated workflow.pipeline.CreatePipelineRequest pipeline = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"pipeline"'}
        ];
        // 可见模式
        mcube.resource.VisiableMode visiable_mode = 5[
        (google.protobuf.field_tag) = {struct_tag: 'json:"visiable_mode"'}
        ];
        // 模版的名字
        string name = 6[
        (google.protobuf.field_tag) = {struct_tag: 'json:"name" validate:"required"'}
        ];
        // 标签
        map<string, string> tags = 7[
        (google.protobuf.field_tag) = {struct_tag: 'json:"tags"'}
        ];
        // 描述
        string description = 8[
        (google.protobuf.field_tag) = {struct_tag: 'json:"description"'}
        ];
}

// UpdateTemplateRequest todo
message UpdateTemplateRequest {
        // 用于创建pipeline的请求参数
        repeated workflow.pipeline.CreatePipelineRequest pipeline = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"pipeline"'}
        ];
        // 可见模式
        mcube.resource.VisiableMode visiable_mode = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"visiable_mode"'}
        ];
        // 模版的名字
        string name = 3[
        (google.protobuf.field_tag) = {struct_tag: 'json:"name"'}
        ];
        // 标签
        map<string, string> tags = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"tags"'}
        ];
        // 描述
        string description = 5[
        (google.protobuf.field_tag) = {struct_tag: 'json:"description"'}
        ];
}

// QueryTemplateRequest 查询Book请求
message QueryTemplateRequest {
        page.PageRequest page = 1;
        string namespace = 4;
        string name = 2;
        string version = 3;
}

// DescribeTemplateRequest todo
message DescribeTemplateRequest {
	// id
	string id = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"id" validate:"required"'}
        ];
}

// DeleteTemplateRequest todo
message DeleteTemplateRequest {
	// id
	string id = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"id" validate:"required"'}
        ];
}