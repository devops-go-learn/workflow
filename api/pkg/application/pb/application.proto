syntax = "proto3";

package workflow.application;
option go_package = "github.com/infraboard/workflow/api/pkg/application";

import "github.com/infraboard/mcube/cmd/protoc-gen-go-ext/extension/tag/tag.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";
import "github.com/infraboard/mcube/pb/request/request.proto";
import "api/pkg/pipeline/pb/pipeline.proto";
import "api/pkg/scm/pb/gitlab.proto";

service Service {
	rpc CreateApplication(CreateApplicationRequest) returns(Application);
    rpc UpdateApplication(UpdateApplicationRequest) returns(Application);
	rpc QueryApplication(QueryApplicationRequest) returns(ApplicationSet);
    rpc DescribeApplication(DescribeApplicationRequest) returns(Application);
    rpc DeleteApplication(DeleteApplicationRequest) returns(Application);
    rpc HandleApplicationEvent(ApplicationEvent) returns(Application);
}

// SCM_TYPE 流水线状态
enum SCM_TYPE {
    // gitlab
    GITLAB = 0;
	// github
	GITHUB = 1;
	// coding.net
	CODING = 2;
}

// Application todo
message Application {
    // 唯一ID
    string id = 1[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"_id" json:"id"'}
        ];
    // 用于加密应用的铭感信息
    string key = 19[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"key" json:"key"'}
        ];
    // 所属域
    string domain = 2[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"domain" json:"domain"'}
        ];
    // 所属空间
    string namespace = 3[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"namespace" json:"namespace"'}
        ];
    // 创建时间
    int64 create_at = 4[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"create_at" json:"create_at"'}
        ];
    // 创建人
    string create_by = 5[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"create_by" json:"create_by"'}
        ];
    // 更新时间
    int64 update_at = 6[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"update_at" json:"update_at"'}
        ];
    // 更新人
    string update_by = 7[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"update_by" json:"update_by"'}
        ];
    // 名称
    string name = 8[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"name" json:"name"'}
        ];
    // 应用标签
    map<string, string> tags = 9[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"tags" json:"tags"'}
        ];
    // 描述
    string description = 10[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"description" json:"description"'}
        ];
    // 仓库ssh url地址
    string repo_ssh_url = 12[
        (google.protobuf.field_tag) = {struct_tag: 'json:"repo_ssh_url"'}
        ];
    // 仓库http url地址
    string repo_http_url = 13[
        (google.protobuf.field_tag) = {struct_tag: 'json:"repo_http_url"'}
        ];
    // 仓库来源类型
    SCM_TYPE scm_type = 14[
        (google.protobuf.field_tag) = {struct_tag: 'json:"scm_type"'}
        ];
    // 仓库来源类型
    string scm_project_id = 15[
        (google.protobuf.field_tag) = {struct_tag: 'json:"scm_project_id"'}
        ];
    // scm设置Hook后返回的id, 用于删除应用时，取消hook使用
    string scm_hook_id = 16[
        (google.protobuf.field_tag) = {struct_tag: 'json:"scm_hook_id"'}
        ];
    // 创建hook过程中的错误信息
    string hook_error = 17[
        (google.protobuf.field_tag) = {struct_tag: 'json:"hook_error"'}
        ];
    // 仓库的priviate token, 用于设置回调
    string scm_private_token = 18[
        (google.protobuf.field_tag) = {struct_tag: 'json:"scm_private_token"'}
        ];
    // 用于创建pipeline的请求参数
    repeated workflow.pipeline.CreatePipelineRequest pipelines = 11[
        (google.protobuf.field_tag) = {struct_tag: 'json:"pipelines"'}
        ];
    // 应用事件的处理状态
    repeated PipelineCreateStatus pipline_create_status = 20[
        (google.protobuf.field_tag) = {struct_tag: 'json:"pipline_create_status"'}
        ];
}

message PipelineCreateStatus {
    // pipeline 创建请求的pingpline名称
    string pipeline_name = 1[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"pipeline_name" json:"pipeline_name"'}
        ];
    // 触发时间
    int64 timestamp = 4[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"timestamp" json:"timestamp"'}
        ];
    // 创建错误
    string create_error = 2[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"create_error" json:"create_error"'}
        ];
    // 创建成功后的,pipline实例
    string pipeline_id = 3[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"pipeline" json:"pipeline_id"'}
        ];
}


// ApplicationSet todo
message ApplicationSet {
    int64 total = 1[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"total" json:"total"'}
        ];
    repeated Application items = 2[
        (google.protobuf.field_tag) = {struct_tag: 'bson:"items" json:"items"'}
        ];
}

// CreateApplicationRequest 创建Book请求
message CreateApplicationRequest {
    // 所属域
    string domain = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"domain" validate:"required"'}
        ];
    // 所属空间
    string namespace = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"namespace" validate:"required"'}
        ];
    // 创建人
    string create_by = 3[
        (google.protobuf.field_tag) = {struct_tag: 'json:"create_by" validate:"required"'}
        ];
    // 名称
    string name = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"name" validate:"required"'}
        ];
    // 应用标签
    map<string, string> tags = 5[
        (google.protobuf.field_tag) = {struct_tag: 'json:"tags"'}
        ];
    // 描述
    string description = 6[
        (google.protobuf.field_tag) = {struct_tag: 'json:"description"'}
        ];
    // 仓库ssh url地址
    string repo_ssh_url = 8[
        (google.protobuf.field_tag) = {struct_tag: 'json:"repo_ssh_url" validate:"required"'}
        ];
    // 仓库http url地址
    string repo_http_url = 9[
        (google.protobuf.field_tag) = {struct_tag: 'json:"repo_http_url"'}
        ];
    // 仓库来源类型
    SCM_TYPE scm_type = 10[
        (google.protobuf.field_tag) = {struct_tag: 'json:"scm_type"'}
        ];
    // 仓库来源类型
    string scm_project_id = 11[
        (google.protobuf.field_tag) = {struct_tag: 'json:"scm_project_id"'}
        ];
    // 仓库的priviate token, 用于设置回调
    string scm_private_token = 12[
        (google.protobuf.field_tag) = {struct_tag: 'json:"scm_private_token"'}
        ];
    // 用于创建pipeline的请求参数
    repeated workflow.pipeline.CreatePipelineRequest pipelines = 7[
        (google.protobuf.field_tag) = {struct_tag: 'json:"pipelines"'}
        ];
}

// QueryApplicationRequest 查询Book请求
message QueryApplicationRequest {
    page.PageRequest page = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"page"'}
        ];
    // 所属域
    string domain = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"domain" validate:"required"'}
        ];
    // 所属空间
    string namespace = 3[
        (google.protobuf.field_tag) = {struct_tag: 'json:"namespace" validate:"required"'}
        ];
    // 应用的名字
    string name = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"name"'}
        ];
}

message DeleteApplicationRequest {
    // 所属空间
    string namespace = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"namespace" validate:"required"'}
        ]; 
    // 应用的名字
    string name = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"name" validate:"required"'}
        ];  
}

message DescribeApplicationRequest {
    // 唯一ID
    string id = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"id"'}
        ];
    // 所属空间
    string namespace = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"namespace"'}
        ]; 
    // 应用的名字
    string name = 3[
        (google.protobuf.field_tag) = {struct_tag: 'json:"name"'}
        ]; 
}

message ApplicationEvent {
    // 应用ID
    string app_id = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"app_id" validate:"required"'}
        ];
    // webhook事件
    workflow.pipeline.scm.WebHookEvent webhook_event = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"webhook_event"'}
        ];
}


message UpdateApplicationRequest {
    // 更新模式
    mcube.request.UpdateMode update_mode = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"update_mode"'}
    ];
    // 更新人
    string update_by = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"update_by"'}
        ];
    // 应用ID
    string id = 3[
        (google.protobuf.field_tag) = {struct_tag: 'json:"id" validate:"required"'}
    ];
    // 需要更新的数据
    UpdateApplicationData data = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"data" validate:"required"'}
    ];
}

message UpdateApplicationData {
    // 名称
    string name = 1[
        (google.protobuf.field_tag) = {struct_tag: 'json:"name"'}
        ];
    // 应用标签
    map<string, string> tags = 2[
        (google.protobuf.field_tag) = {struct_tag: 'json:"tags"'}
        ];
    // 描述
    string description = 3[
        (google.protobuf.field_tag) = {struct_tag: 'json:"description"'}
        ];
    // 用于创建pipeline的请求参数
    repeated workflow.pipeline.CreatePipelineRequest pipelines = 4[
        (google.protobuf.field_tag) = {struct_tag: 'json:"pipelines"'}
        ];
}