// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/apps/action/pb/action.proto

package action

import (
	request "github.com/infraboard/mcube/http/request"
	resource "github.com/infraboard/mcube/pb/resource"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// STEP_RUNNER step执行类型
type RUNNER_TYPE int32

const (
	// 使用Node节点本地安装的Docker执行
	RUNNER_TYPE_DOCKER RUNNER_TYPE = 0
	// 使用K8s执行
	RUNNER_TYPE_K8s RUNNER_TYPE = 1
	// 本地执行, 用于在Node节点本地执行
	RUNNER_TYPE_LOCAL RUNNER_TYPE = 2
)

// Enum value maps for RUNNER_TYPE.
var (
	RUNNER_TYPE_name = map[int32]string{
		0: "DOCKER",
		1: "K8s",
		2: "LOCAL",
	}
	RUNNER_TYPE_value = map[string]int32{
		"DOCKER": 0,
		"K8s":    1,
		"LOCAL":  2,
	}
)

func (x RUNNER_TYPE) Enum() *RUNNER_TYPE {
	p := new(RUNNER_TYPE)
	*p = x
	return p
}

func (x RUNNER_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RUNNER_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_api_apps_action_pb_action_proto_enumTypes[0].Descriptor()
}

func (RUNNER_TYPE) Type() protoreflect.EnumType {
	return &file_api_apps_action_pb_action_proto_enumTypes[0]
}

func (x RUNNER_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RUNNER_TYPE.Descriptor instead.
func (RUNNER_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{0}
}

// Action 动作定义
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 名称
	// @gotags: bson:"_id" json:"id" validate:"required"
	Id string `protobuf:"bytes,19,opt,name=id,proto3" json:"id" bson:"_id" validate:"required"`
	// 图片
	// @gotags: bson:"logo" json:"logo"
	Logo string `protobuf:"bytes,20,opt,name=logo,proto3" json:"logo" bson:"logo"`
	// 展示名称
	// @gotags: bson:"display_name" json:"display_name"
	DisplayName string `protobuf:"bytes,21,opt,name=display_name,json=displayName,proto3" json:"display_name" bson:"display_name"`
	// 是否是最新版本, 最新版本只有一个
	// @gotags: bson:"is_latest" json:"is_latest"
	IsLatest bool `protobuf:"varint,22,opt,name=is_latest,json=isLatest,proto3" json:"is_latest" bson:"is_latest"`
	// 名称
	// @gotags: bson:"name" json:"name" validate:"required"
	Name string `protobuf:"bytes,8,opt,name=name,proto3" json:"name" bson:"name" validate:"required"`
	// Action对应的版本, 推荐默认v1
	// @gotags: json:"version" validate:"required"
	Version string `protobuf:"bytes,18,opt,name=version,proto3" json:"version" validate:"required"`
	// 资源版本
	// @gotags: bson:"resource_version" json:"resource_version,omitempty"
	ResourceVersion int64 `protobuf:"varint,16,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty" bson:"resource_version"`
	// 所属域
	// @gotags: bson:"domain" json:"domain"
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain" bson:"domain"`
	// 所属空间
	// @gotags: bson:"namespace" json:"namespace"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace" bson:"namespace"`
	// 创建时间
	// @gotags: bson:"create_at" json:"create_at"
	CreateAt int64 `protobuf:"varint,3,opt,name=create_at,json=createAt,proto3" json:"create_at" bson:"create_at"`
	// 创建人
	// @gotags: bson:"create_by" json:"create_by"
	CreateBy string `protobuf:"bytes,4,opt,name=create_by,json=createBy,proto3" json:"create_by" bson:"create_by"`
	// 更新时间
	// @gotags: bson:"update_at" json:"update_at"
	UpdateAt int64 `protobuf:"varint,5,opt,name=update_at,json=updateAt,proto3" json:"update_at" bson:"update_at"`
	// 更新人
	// @gotags: bson:"update_by" json:"update_by"
	UpdateBy string `protobuf:"bytes,6,opt,name=update_by,json=updateBy,proto3" json:"update_by" bson:"update_by"`
	// 可见模式
	// @gotags: bson:"visiable_mode" json:"visiable_mode"
	VisiableMode resource.VisiableMode `protobuf:"varint,15,opt,name=visiable_mode,json=visiableMode,proto3,enum=infraboard.mcube.resource.VisiableMode" json:"visiable_mode" bson:"visiable_mode"`
	// 执行器类型, 默认采用Node节点本地Docker执行
	// @gotags: bson:"runner_type" json:"runner_type"
	RunnerType RUNNER_TYPE `protobuf:"varint,13,opt,name=runner_type,json=runnerType,proto3,enum=infraboard.workflow.action.RUNNER_TYPE" json:"runner_type" bson:"runner_type"`
	// runner运行时参数
	// @gotags: bson:"runner_params" json:"runner_params"
	RunnerParams map[string]string `protobuf:"bytes,17,rep,name=runner_params,json=runnerParams,proto3" json:"runner_params" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"runner_params"`
	// step运行时的参数说明
	// @gotags: bson:"run_params" json:"run_params"
	RunParams []*RunParamDesc `protobuf:"bytes,14,rep,name=run_params,json=runParams,proto3" json:"run_params" bson:"run_params"`
	// 标签
	// @gotags: bson:"tags" json:"tags"
	Tags map[string]string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"tags"`
	// 描述
	// @gotags: bson:"description" json:"description"
	Description string `protobuf:"bytes,12,opt,name=description,proto3" json:"description" bson:"description"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{0}
}

func (x *Action) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Action) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Action) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Action) GetIsLatest() bool {
	if x != nil {
		return x.IsLatest
	}
	return false
}

func (x *Action) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Action) GetResourceVersion() int64 {
	if x != nil {
		return x.ResourceVersion
	}
	return 0
}

func (x *Action) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Action) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Action) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Action) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *Action) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *Action) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *Action) GetVisiableMode() resource.VisiableMode {
	if x != nil {
		return x.VisiableMode
	}
	return resource.VisiableMode(0)
}

func (x *Action) GetRunnerType() RUNNER_TYPE {
	if x != nil {
		return x.RunnerType
	}
	return RUNNER_TYPE_DOCKER
}

func (x *Action) GetRunnerParams() map[string]string {
	if x != nil {
		return x.RunnerParams
	}
	return nil
}

func (x *Action) GetRunParams() []*RunParamDesc {
	if x != nil {
		return x.RunParams
	}
	return nil
}

func (x *Action) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Action) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RunnerParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 参数的值
	// @gotags: bson:"value" json:"value"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value" bson:"value"`
	// 值描述
	// @gotags: bson:"describe" json:"describe"
	Describe string `protobuf:"bytes,2,opt,name=describe,proto3" json:"describe" bson:"describe"`
}

func (x *RunnerParam) Reset() {
	*x = RunnerParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerParam) ProtoMessage() {}

func (x *RunnerParam) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerParam.ProtoReflect.Descriptor instead.
func (*RunnerParam) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{1}
}

func (x *RunnerParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RunnerParam) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type RunParamDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 可选/必传
	// @gotags: bson:"required" json:"required"
	Required bool `protobuf:"varint,1,opt,name=required,proto3" json:"required" bson:"required"`
	// 建的名称
	// @gotags: bson:"key_name" json:"key_name" validate:"required"
	KeyName string `protobuf:"bytes,4,opt,name=key_name,json=keyName,proto3" json:"key_name" bson:"key_name" validate:"required"`
	// 建的描述
	// @gotags: bson:"key_desc" json:"key_desc"
	KeyDesc string `protobuf:"bytes,5,opt,name=key_desc,json=keyDesc,proto3" json:"key_desc" bson:"key_desc"`
	// 默认值, action运行时如果未传人，会填充默认值
	// @gotags: bson:"default_value" json:"default_value"
	DefaultValue string `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value" bson:"default_value"`
	// 值描述
	// @gotags: bson:"value_desc" json:"value_desc"
	ValueDesc string `protobuf:"bytes,3,opt,name=value_desc,json=valueDesc,proto3" json:"value_desc" bson:"value_desc"`
}

func (x *RunParamDesc) Reset() {
	*x = RunParamDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunParamDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunParamDesc) ProtoMessage() {}

func (x *RunParamDesc) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunParamDesc.ProtoReflect.Descriptor instead.
func (*RunParamDesc) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{2}
}

func (x *RunParamDesc) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *RunParamDesc) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *RunParamDesc) GetKeyDesc() string {
	if x != nil {
		return x.KeyDesc
	}
	return ""
}

func (x *RunParamDesc) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *RunParamDesc) GetValueDesc() string {
	if x != nil {
		return x.ValueDesc
	}
	return ""
}

// ActionSet todo
type ActionSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: bson:"total" json:"total"
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total" bson:"total"`
	// @gotags: bson:"items" json:"items"
	Items []*Action `protobuf:"bytes,2,rep,name=items,proto3" json:"items" bson:"items"`
}

func (x *ActionSet) Reset() {
	*x = ActionSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSet) ProtoMessage() {}

func (x *ActionSet) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionSet.ProtoReflect.Descriptor instead.
func (*ActionSet) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{3}
}

func (x *ActionSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ActionSet) GetItems() []*Action {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 执行器类型, 默认采用Node节点本地Docker执行
	// @gotags: json:"runner_type"
	RunnerType RUNNER_TYPE `protobuf:"varint,7,opt,name=runner_type,json=runnerType,proto3,enum=infraboard.workflow.action.RUNNER_TYPE" json:"runner_type"`
	// 所属域
	// @gotags: json:"domain" validate:"required"
	Domain string `protobuf:"bytes,9,opt,name=domain,proto3" json:"domain" validate:"required"`
	// 所属空间
	// @gotags: json:"namespace" validate:"required"
	Namespace string `protobuf:"bytes,10,opt,name=namespace,proto3" json:"namespace" validate:"required"`
	// 创建人
	// @gotags: json:"create_by" validate:"required"
	CreateBy string `protobuf:"bytes,11,opt,name=create_by,json=createBy,proto3" json:"create_by" validate:"required"`
	// 图片
	// @gotags: json:"logo"
	Logo string `protobuf:"bytes,12,opt,name=logo,proto3" json:"logo"`
	// 名称
	// @gotags: json:"name" validate:"required"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" validate:"required"`
	// Action对应的版本, 推荐默认v1
	// @gotags: json:"version" validate:"required"
	Version string `protobuf:"bytes,8,opt,name=version,proto3" json:"version" validate:"required"`
	// 展示名称
	// @gotags: json:"display_name"
	DisplayName string `protobuf:"bytes,13,opt,name=display_name,json=displayName,proto3" json:"display_name"`
	// 可见模式
	// @gotags: json:"visiable_mode"
	VisiableMode resource.VisiableMode `protobuf:"varint,6,opt,name=visiable_mode,json=visiableMode,proto3,enum=infraboard.mcube.resource.VisiableMode" json:"visiable_mode"`
	// 运行时 Runner传人参数, 创建完成后不能修改, 要修改请新建版本
	// @gotags: bson:"runner_params" json:"runner_params"
	RunnerParams map[string]string `protobuf:"bytes,2,rep,name=runner_params,json=runnerParams,proto3" json:"runner_params" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"runner_params"`
	// 运行时 用户传人的参数说明
	// @gotags: bson:"run_params" json:"run_params"
	RunParams []*RunParamDesc `protobuf:"bytes,3,rep,name=run_params,json=runParams,proto3" json:"run_params" bson:"run_params"`
	// 标签
	// @gotags: json:"tags"
	Tags map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 描述
	// @gotags: json:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
}

func (x *CreateActionRequest) Reset() {
	*x = CreateActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActionRequest) ProtoMessage() {}

func (x *CreateActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActionRequest.ProtoReflect.Descriptor instead.
func (*CreateActionRequest) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{4}
}

func (x *CreateActionRequest) GetRunnerType() RUNNER_TYPE {
	if x != nil {
		return x.RunnerType
	}
	return RUNNER_TYPE_DOCKER
}

func (x *CreateActionRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreateActionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateActionRequest) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *CreateActionRequest) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *CreateActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateActionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateActionRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateActionRequest) GetVisiableMode() resource.VisiableMode {
	if x != nil {
		return x.VisiableMode
	}
	return resource.VisiableMode(0)
}

func (x *CreateActionRequest) GetRunnerParams() map[string]string {
	if x != nil {
		return x.RunnerParams
	}
	return nil
}

func (x *CreateActionRequest) GetRunParams() []*RunParamDesc {
	if x != nil {
		return x.RunParams
	}
	return nil
}

func (x *CreateActionRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateActionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// UpdateActionRequest, 不能修改ActionRunner运行参数, 如果需要修改，请新建一个版本
type UpdateActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指定名称
	// @gotags: json:"name" validate:"required"
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name" validate:"required"`
	// 指定版本
	// @gotags: json:"version" validate:"required"
	Version string `protobuf:"bytes,6,opt,name=version,proto3" json:"version" validate:"required"`
	// 可见模式
	// @gotags: json:"visiable_mode"
	VisiableMode resource.VisiableMode `protobuf:"varint,1,opt,name=visiable_mode,json=visiableMode,proto3,enum=infraboard.mcube.resource.VisiableMode" json:"visiable_mode"`
	// 运行时的参数说明
	// @gotags: bson:"run_params" json:"run_params"
	RunParams []*RunParamDesc `protobuf:"bytes,2,rep,name=run_params,json=runParams,proto3" json:"run_params" bson:"run_params"`
	// 标签
	// @gotags: json:"tags"
	Tags map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 描述
	// @gotags: json:"description"
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description"`
}

func (x *UpdateActionRequest) Reset() {
	*x = UpdateActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActionRequest) ProtoMessage() {}

func (x *UpdateActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActionRequest.ProtoReflect.Descriptor instead.
func (*UpdateActionRequest) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateActionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateActionRequest) GetVisiableMode() resource.VisiableMode {
	if x != nil {
		return x.VisiableMode
	}
	return resource.VisiableMode(0)
}

func (x *UpdateActionRequest) GetRunParams() []*RunParamDesc {
	if x != nil {
		return x.RunParams
	}
	return nil
}

func (x *UpdateActionRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateActionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DescribeActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	// @gotags: json:"id"
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id"`
	// 名称
	// @gotags: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// 对应的版本
	// @gotags: json:"version"
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version"`
}

func (x *DescribeActionRequest) Reset() {
	*x = DescribeActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeActionRequest) ProtoMessage() {}

func (x *DescribeActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeActionRequest.ProtoReflect.Descriptor instead.
func (*DescribeActionRequest) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeActionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DescribeActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeActionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DeleteActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指定名称
	// @gotags: json:"name" validate:"required"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" validate:"required"`
	// 指定版本
	// @gotags: json:"version" validate:"required"
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version" validate:"required"`
	// 唯一空间
	// @gotags: json:"namespace" validate:"required"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace" validate:"required"`
}

func (x *DeleteActionRequest) Reset() {
	*x = DeleteActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActionRequest) ProtoMessage() {}

func (x *DeleteActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActionRequest.ProtoReflect.Descriptor instead.
func (*DeleteActionRequest) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteActionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeleteActionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// QueryPipelineRequest 查询Book请求
type QueryActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"page"
	Page *request.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page"`
	// @gotags: json:"namespace"
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace"`
	// @gotags: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// @gotags: json:"version"
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version"`
}

func (x *QueryActionRequest) Reset() {
	*x = QueryActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_apps_action_pb_action_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionRequest) ProtoMessage() {}

func (x *QueryActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_apps_action_pb_action_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionRequest.ProtoReflect.Descriptor instead.
func (*QueryActionRequest) Descriptor() ([]byte, []int) {
	return file_api_apps_action_pb_action_proto_rawDescGZIP(), []int{8}
}

func (x *QueryActionRequest) GetPage() *request.PageRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *QueryActionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *QueryActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryActionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_api_apps_action_pb_action_proto protoreflect.FileDescriptor

var file_api_apps_action_pb_action_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1a, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x61,
	0x67, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x89, 0x07, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x4c, 0x0a, 0x0d, 0x76, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x48, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x55, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52,
	0x0a, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x0d, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x44, 0x65, 0x73, 0x63, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x40, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x3f, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a,
	0x0b, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0xa4,
	0x01, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x22, 0x5b, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x81, 0x06, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0b, 0x72, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x55, 0x4e,
	0x4e, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0d,
	0x76, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x56, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x76, 0x69,
	0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x72, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x63,
	0x52, 0x09, 0x72, 0x75, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x4d, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3f, 0x0a, 0x11,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a,
	0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x84, 0x03, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0d,
	0x76, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x56, 0x69, 0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x76, 0x69,
	0x73, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x75,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x4d, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a,
	0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x75, 0x62, 0x65, 0x2e,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2a, 0x2d, 0x0a, 0x0b, 0x52, 0x55, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x4b, 0x38, 0x73, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10,
	0x02, 0x32, 0x87, 0x04, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x67, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x63, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x30, 0x5a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_apps_action_pb_action_proto_rawDescOnce sync.Once
	file_api_apps_action_pb_action_proto_rawDescData = file_api_apps_action_pb_action_proto_rawDesc
)

func file_api_apps_action_pb_action_proto_rawDescGZIP() []byte {
	file_api_apps_action_pb_action_proto_rawDescOnce.Do(func() {
		file_api_apps_action_pb_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_apps_action_pb_action_proto_rawDescData)
	})
	return file_api_apps_action_pb_action_proto_rawDescData
}

var file_api_apps_action_pb_action_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_apps_action_pb_action_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_apps_action_pb_action_proto_goTypes = []interface{}{
	(RUNNER_TYPE)(0),              // 0: infraboard.workflow.action.RUNNER_TYPE
	(*Action)(nil),                // 1: infraboard.workflow.action.Action
	(*RunnerParam)(nil),           // 2: infraboard.workflow.action.RunnerParam
	(*RunParamDesc)(nil),          // 3: infraboard.workflow.action.RunParamDesc
	(*ActionSet)(nil),             // 4: infraboard.workflow.action.ActionSet
	(*CreateActionRequest)(nil),   // 5: infraboard.workflow.action.CreateActionRequest
	(*UpdateActionRequest)(nil),   // 6: infraboard.workflow.action.UpdateActionRequest
	(*DescribeActionRequest)(nil), // 7: infraboard.workflow.action.DescribeActionRequest
	(*DeleteActionRequest)(nil),   // 8: infraboard.workflow.action.DeleteActionRequest
	(*QueryActionRequest)(nil),    // 9: infraboard.workflow.action.QueryActionRequest
	nil,                           // 10: infraboard.workflow.action.Action.RunnerParamsEntry
	nil,                           // 11: infraboard.workflow.action.Action.TagsEntry
	nil,                           // 12: infraboard.workflow.action.CreateActionRequest.RunnerParamsEntry
	nil,                           // 13: infraboard.workflow.action.CreateActionRequest.TagsEntry
	nil,                           // 14: infraboard.workflow.action.UpdateActionRequest.TagsEntry
	(resource.VisiableMode)(0),    // 15: infraboard.mcube.resource.VisiableMode
	(*request.PageRequest)(nil),   // 16: infraboard.mcube.page.PageRequest
}
var file_api_apps_action_pb_action_proto_depIdxs = []int32{
	15, // 0: infraboard.workflow.action.Action.visiable_mode:type_name -> infraboard.mcube.resource.VisiableMode
	0,  // 1: infraboard.workflow.action.Action.runner_type:type_name -> infraboard.workflow.action.RUNNER_TYPE
	10, // 2: infraboard.workflow.action.Action.runner_params:type_name -> infraboard.workflow.action.Action.RunnerParamsEntry
	3,  // 3: infraboard.workflow.action.Action.run_params:type_name -> infraboard.workflow.action.RunParamDesc
	11, // 4: infraboard.workflow.action.Action.tags:type_name -> infraboard.workflow.action.Action.TagsEntry
	1,  // 5: infraboard.workflow.action.ActionSet.items:type_name -> infraboard.workflow.action.Action
	0,  // 6: infraboard.workflow.action.CreateActionRequest.runner_type:type_name -> infraboard.workflow.action.RUNNER_TYPE
	15, // 7: infraboard.workflow.action.CreateActionRequest.visiable_mode:type_name -> infraboard.mcube.resource.VisiableMode
	12, // 8: infraboard.workflow.action.CreateActionRequest.runner_params:type_name -> infraboard.workflow.action.CreateActionRequest.RunnerParamsEntry
	3,  // 9: infraboard.workflow.action.CreateActionRequest.run_params:type_name -> infraboard.workflow.action.RunParamDesc
	13, // 10: infraboard.workflow.action.CreateActionRequest.tags:type_name -> infraboard.workflow.action.CreateActionRequest.TagsEntry
	15, // 11: infraboard.workflow.action.UpdateActionRequest.visiable_mode:type_name -> infraboard.mcube.resource.VisiableMode
	3,  // 12: infraboard.workflow.action.UpdateActionRequest.run_params:type_name -> infraboard.workflow.action.RunParamDesc
	14, // 13: infraboard.workflow.action.UpdateActionRequest.tags:type_name -> infraboard.workflow.action.UpdateActionRequest.TagsEntry
	16, // 14: infraboard.workflow.action.QueryActionRequest.page:type_name -> infraboard.mcube.page.PageRequest
	5,  // 15: infraboard.workflow.action.Service.CreateAction:input_type -> infraboard.workflow.action.CreateActionRequest
	9,  // 16: infraboard.workflow.action.Service.QueryAction:input_type -> infraboard.workflow.action.QueryActionRequest
	7,  // 17: infraboard.workflow.action.Service.DescribeAction:input_type -> infraboard.workflow.action.DescribeActionRequest
	6,  // 18: infraboard.workflow.action.Service.UpdateAction:input_type -> infraboard.workflow.action.UpdateActionRequest
	8,  // 19: infraboard.workflow.action.Service.DeleteAction:input_type -> infraboard.workflow.action.DeleteActionRequest
	1,  // 20: infraboard.workflow.action.Service.CreateAction:output_type -> infraboard.workflow.action.Action
	4,  // 21: infraboard.workflow.action.Service.QueryAction:output_type -> infraboard.workflow.action.ActionSet
	1,  // 22: infraboard.workflow.action.Service.DescribeAction:output_type -> infraboard.workflow.action.Action
	1,  // 23: infraboard.workflow.action.Service.UpdateAction:output_type -> infraboard.workflow.action.Action
	1,  // 24: infraboard.workflow.action.Service.DeleteAction:output_type -> infraboard.workflow.action.Action
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_apps_action_pb_action_proto_init() }
func file_api_apps_action_pb_action_proto_init() {
	if File_api_apps_action_pb_action_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_apps_action_pb_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_apps_action_pb_action_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_apps_action_pb_action_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunParamDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_apps_action_pb_action_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_apps_action_pb_action_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_apps_action_pb_action_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_apps_action_pb_action_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_apps_action_pb_action_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_apps_action_pb_action_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_apps_action_pb_action_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_apps_action_pb_action_proto_goTypes,
		DependencyIndexes: file_api_apps_action_pb_action_proto_depIdxs,
		EnumInfos:         file_api_apps_action_pb_action_proto_enumTypes,
		MessageInfos:      file_api_apps_action_pb_action_proto_msgTypes,
	}.Build()
	File_api_apps_action_pb_action_proto = out.File
	file_api_apps_action_pb_action_proto_rawDesc = nil
	file_api_apps_action_pb_action_proto_goTypes = nil
	file_api_apps_action_pb_action_proto_depIdxs = nil
}
