syntax = "proto3";

package infraboard.workflow.deploy;
option go_package = "github.com/infraboard/workflow/api/apps/deploy";

import "github.com/infraboard/mcube/pb/page/page.proto";

service Service {
	rpc CreateApplicationDeploy(CreateApplicationDeployRequest) returns(ApplicationDeploy);
    rpc QueryApplicationDeploy(QueryApplicationDeployRequest) returns(ApplicationDeploySet);
    rpc DescribeApplicationDeploy(DescribeApplicationDeployRequest) returns(ApplicationDeploy);
    rpc DeleteApplicationDeploy(DeleteApplicationDeployRequest) returns(ApplicationDeploy);
}

// Mode 部署的形式
enum Mode {
    // 主机模式部署
    Host = 0;
	// k8s模式部署
	K8s = 1;
}

// 应用部署配置类型
enum AppConfigType {
    // 配置文件形式
    File = 0;
    // 环境变量
    EnvVar = 1;
    // ConfigMap k8s模式下才支持
    ConfigMap = 2;
}

// ApplicationDeploy 应用部署
message ApplicationDeploy {
    // 唯一ID
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 创建时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 2;
    // 创建时间
    // @gotags: bson:"update_at" json:"update_at"
    int64 update_at = 3;
    // 创建数据
    // @gotags: bson:"data" json:"data"
    CreateApplicationDeployRequest data = 4;
}

// deployA -->   a, b, c, d  
// service -->    LB<> 域名
// 升级流程:  d -->0,   d--> upgrade,   test--> ok, online--> 25%
message HostModeConfig {
    // 关联的主机列表, 这里是关联id, 来源于cmdb系统
    // @gotags: bson:"hosts_ref" json:"hosts_ref" validate:"required"
    repeated string hosts_ref = 1;
}

// ApplicationConfig 应用部署时的配置
message ApplicationConfig {
    // 配置方式
    // @gotags: bson:"type" json:"type"
    AppConfigType type = 1;
    // 配置文件
    // @gotags: bson:"files" json:"files"
    repeated FileConfig files = 2;
    // 环境变量
    // @gotags: bson:"envs" json:"envs"
    map<string, string> envs = 3;
    // ConfigMap配置
    // @gotags: bson:"config_map" json:"config_map"
    string config_map = 4;
}

// FileConfig 应用的配置文件
message FileConfig {
    // 配置文件描述
    // @gotags: bson:"desc" json:"desc"
    string desc = 1;
    // 配置文件放置路径
    // @gotags: bson:"path" json:"path" validate:"required"
    string path = 2;
    // 配置文件的内容
    // @gotags: bson:"content" json:"content" validate:"required"
    string content = 3;
}

// K8sModeConfig yaml文本格式的k8s部署相关配置文件
message K8sModeConfig {
    // k8s 认证配置
    // @gotags: bson:"cluster_name" json:"cluster_name" validate:"required"
    string cluster_name = 1;
    // k8s yaml配置, 支持deploy/statfulset/daemonset/job/cronjob
    // @gotags: bson:"workload" json:"workload" validate:"required"
    string workload = 2;
    // k8s service配置
    // @gotags: bson:"service" json:"service" validate:"required"
    string service =3;
}

// CreateApplicationDeployRequest 应用部署
message CreateApplicationDeployRequest {
    // 所属域
    // @gotags: json:"domain" bson:"domain" validate:"required"
    string domain = 1;
    // 所属空间
    // @gotags: json:"namespace" bson:"namespace" validate:"required"
    string namespace = 2;
    // 创建人
    // @gotags: json:"create_by" bson:"create_by" validate:"required"
    string create_by = 3;
    // 部署所处厂商
    // @gotags: json:"name" bson:"vendor" validate:"required"
    string vendor = 4;
    // 部署所处地域
    // @gotags: json:"region" bson:"region" validate:"required"
    string region = 5;
    // 关联的应用
    // @gotags: json:"app_id" bson:"app_id" validate:"required"
    string app_id = 6;
    // 所属环境
    // @gotags: json:"environment" bson:"environment" validate:"required"
    string environment = 7;
    // 部署的名称
    // @gotags: json:"name" bson:"name" validate:"required"
    string name = 8;
    // 部署模式
    // @gotags: json:"deploy_mode" bson:"deploy_mode"
    Mode deploy_mode = 9;
    // 主机模式的部署配置
    // @gotags: json:"host_deploy_config" bson:"host_deploy_config"
    HostModeConfig host_deploy_config = 10;
    // k8s模式下的部署配置
    // @gotags: json:"k8s_deploy_config" bson:"k8s_deploy_config"
    K8sModeConfig k8s_deploy_config = 11;
	// 标签
    // @gotags: json:"tags" bson:"tags"
	map<string, string> tags = 12;
	// 描述
    // @gotags: json:"description" bson:"description"
	string description = 13;
}

// ApplicationDeploySet todo
message ApplicationDeploySet {
    // @gotags: json:"total"
    int64 total = 1;
    // @gotags: json:"items"
    repeated ApplicationDeploy items = 2;
}

message QueryApplicationDeployRequest {
    // @gotags: json:"page"
    infraboard.mcube.page.PageRequest page = 1;
    // @gotags: json:"domain"
    string domain = 2;
    // @gotags: json:"namespace"
    string namespace = 3;
    // @gotags: json:"app_id"
    string app_id = 4;
    // @gotags: json:"environment"
    string environment = 5;    
}

message DeleteApplicationDeployRequest {
    // @gotags: json:"namespace"
    string namespace = 1;
    // @gotags: json:"id"
    string id = 2;
}

message DescribeApplicationDeployRequest {
    // @gotags: json:"namespace"
    string namespace = 1;
    // @gotags: json:"id" validate:"required"
    string id = 2;
}