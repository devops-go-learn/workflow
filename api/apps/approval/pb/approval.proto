syntax = "proto3";

package infraboard.workorder.approval;
option go_package = "github.com/infraboard/workflow/api/apps/approval";

import "github.com/infraboard/mcube/pb/page/page.proto";
import "github.com/infraboard/mcube/pb/request/request.proto";

service Service {
    rpc CreateApproval(CreateApprovalRequest) returns(Approval);
    rpc QueryApproval(QueryApprovalRequest) returns(ApprovalSet);
    rpc DescribeApproval(DescribeApprovalRequest) returns(Approval);
    rpc UpdateApproval(UpdateApprovalRequest) returns(Approval);
    rpc DeleteApproval(DeleteApprovalRequest) returns(Approval);
}

message Approval {

}

message ApprovalSet {
    // 分页时，返回总数量
    // @gotags: json:"total"
    int64 total = 1;
    // 一页的数据
    // @gotags: json:"items"
    repeated Approval items = 2;    
}

enum Provider {
    DEVCLOUD = 0;
    FEISHU = 1;
}

message CreateApprovalRequest {
    // 工单对接的第三方系统
    // @gotags: json:"provider" bson:"provider"
    Provider provider = 1;
    // 工单模版编号, 用于对接
    // @gotags: json:"approval_code" bson:"approval_code"
    string approval_code = 2;
    // 工单状态
    // @gotags: json:"status" bson:"status"
    string status = 3;
}

message QueryApprovalRequest {
    // 分页参数
    // @gotags: json:"page" 
    infraboard.mcube.page.PageRequest page = 1;
}

message DescribeApprovalRequest {

}

message UpdateApprovalRequest {
    // 更新模式
    // @gotags: json:"update_mode"
    mcube.request.UpdateMode update_mode = 1;
}

message DeleteApprovalRequest {

}